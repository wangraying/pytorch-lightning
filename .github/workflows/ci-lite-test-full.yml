name: Test Lite full

# see: https://help.github.com/en/actions/reference/events-that-trigger-workflows
on:  # Trigger the workflow on push or pull request, but only for the master branch
  push:
    branches: [master, "release/*"]
  pull_request:
    branches: [master, "release/*"]
    types: [opened, reopened, ready_for_review, synchronize]
    paths:
      - "requirements/lite/**"
      - "src/lightning_lite/**"
      - "tests/tests_lite/**"
      - "setup.cfg"  # includes pytest config
      - ".github/workflows/ci-lite-test-full.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: ${{ ! (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release/')) }}

jobs:

  lite-cpu:
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2022, macOS-11]
        python-version: ["3.7", "3.10"]  # minimum, maximum
        requires: ["oldest", "latest"]
        release: ["stable"]
        exclude:
          # There's no distribution of the oldest PyTorch 1.9 for Python 3.10.
          # TODO: Remove the exclusion when dropping PyTorch 1.9 support.
          - {python-version: "3.10", requires: "oldest"}

    timeout-minutes: 40

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Reset caching
      run: python -c "import time; days = time.time() / 60 / 60 / 24; print(f'TIME_PERIOD=d{int(days / 2) * 2}')" >> $GITHUB_ENV

    - name: basic setup
      run: |
        pip --version
        pip install -q fire

    - name: Setup Windows
      if: runner.os == 'windows'
      run: |
        python .actions/assistant.py requirements_prune_pkgs horovod

    - name: Set min. dependencies
      if: matrix.requires == 'oldest'
      run: |
        python .actions/assistant.py replace_oldest_ver

    # Note: This uses an internal pip API and may not always work
    # https://github.com/actions/cache/blob/master/examples.md#multiple-oss-in-a-workflow
    - name: Get pip cache dir
      id: pip-cache
      run: echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-py${{ matrix.python-version }}-${{ matrix.release }}-${{ matrix.requires }}-${{ hashFiles('requirements/lite/*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-td${{ env.TIME_PERIOD }}-py${{ matrix.python-version }}-${{ matrix.release }}-${{ matrix.requires }}-

    - name: Install dependencies
      env:
        PACKAGE_NAME: pytorch  # TODO(lite) does this need to say lite?
        FREEZE_REQUIREMENTS: 1
      run: |
        flag=$(python -c "print('--pre' if '${{matrix.release}}' == 'pre' else '')" 2>&1)
        url=$(python -c "print('test/cpu/torch_test.html' if '${{matrix.release}}' == 'pre' else 'cpu/torch_stable.html')" 2>&1)
        pip install -e .[test] --upgrade $flag --find-links "https://download.pytorch.org/whl/${url}"
        pip list
      shell: bash

    - name: Testing Lite
      working-directory: tests/tests_lite
      # NOTE: do not include coverage report here, see: https://github.com/nedbat/coveragepy/issues/1003
      run: coverage run --source lightning_lite -m pytest -v --durations=50 --junitxml=results-${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.requires }}-${{ matrix.release }}.xml

    - name: Upload pytest results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: unittest-results-${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.requires }}-${{ matrix.release }}
        path: tests/tests_lite/results-${{ runner.os }}-py${{ matrix.python-version }}-${{ matrix.requires }}-${{ matrix.release }}.xml

    - name: Statistics
      if: success()
      working-directory: tests/tests_lite
      run: |
        coverage report
        coverage xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: always()
      # see: https://github.com/actions/toolkit/issues/399
      continue-on-error: true
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: tests/tests_lite/coverage.xml
        flags: cpu,pytest,python${{ matrix.python-version }}
        name: CPU-coverage
        fail_ci_if_error: false
